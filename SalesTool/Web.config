<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging" requirePermission="true" />
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
    <sectionGroup name="stormSettings">
      <section name="storm" type="Enferno.Web.StormUtils.StormConfigurationSection, Enferno.Web.StormUtils" allowLocation="true" allowDefinition="Everywhere" />
    </sectionGroup>
    <section name="enferno.salesTool" type="Enferno.Public.Web.SalesTool.SalesToolSection, Enferno.Public.Web.SalesTool" />
  </configSections>
  <appSettings>
    <add key="API.CertFile" value="App_Data\CerveraStormAPI-SE.pfx" />
    <add key="API.CertPwd" value="4711" />
  </appSettings>
  <stormSettings>
    <storm maxNavigationLevels="3" encryptCookie="false" assortmentIdSeed="1" productStatusIdSeed="1,2,3" imageUrl="http://servicesstage.enferno.se/image/" />
  </stormSettings>
  <enferno.salesTool useOrders="true" notifyOrder="true" useStorePickup="true" useStoreReservation="true" popupNewReservations="false" deliveryNotePrintXsltPath="~/App_Data/deliveryNotePrint.xslt" />
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <assembly name="Enferno.Public" />
    <assembly name="Enferno.StormApiClient" />
    <assembly name="Enferno.Web.StormUtils" />
    <namespace name="Enferno.Public.Caching" />
    <namespace name="Enferno.StormApiClient" />
    <namespace name="Enferno.Web.StormUtils" />
    <assembly name="Enferno.Public.Web.SalesTool" />
    <namespace name="Enferno.Public.Web.SalesTool" />
    <container>
      <register type="ICacheManager" mapTo="CacheManager">
        <lifetime type="singleton" />
        <method name="AddCache">
          <param name="cache" dependencyName="AccessClient" />
        </method>
      </register>
      <register name="AccessClient" type="ICache" mapTo="InMemoryCache">
        <lifetime type="singleton" />
        <constructor>
          <param name="name" value="AccessClient" />
        </constructor>
      </register>
      <register type="ICertificateResolver" mapTo="CertificateResolver">
        <constructor />
      </register>
      <register type="ISalesToolAction" mapTo="SalesToolAction">
        <constructor />
      </register>
    </container>
  </unity>
  <loggingConfiguration name="" tracingEnabled="true" defaultCategory="Debug" logWarningsWhenNoCategoriesMatch="true">
    <listeners>
      <add name="UnprocessedListener" type="Enferno.Public.Logging.RollingXmlTraceListener, Enferno.Public" listenerDataType="Enferno.Public.Logging.Configuration.RollingXmlTraceListenerData, Enferno.Public" fileName="C:\Temp\Logs\SalesTool\Unprocessed.svclog" rollFileExistsBehavior="Increment" rollInterval="Day" maxArchivedFiles="6" traceOutputOptions="LogicalOperationStack, DateTime, Timestamp, ProcessId, ThreadId" />
      <add name="AlertListener" type="Enferno.Public.Logging.RollingXmlTraceListener, Enferno.Public" listenerDataType="Enferno.Public.Logging.Configuration.RollingXmlTraceListenerData, Enferno.Public" fileName="C:\Temp\Logs\SalesTool\Alert.svclog" rollFileExistsBehavior="Increment" rollInterval="Month" maxArchivedFiles="2" traceOutputOptions="LogicalOperationStack, DateTime, Timestamp, ProcessId, ThreadId" />
      <add name="DebugListener" type="Enferno.Public.Logging.RollingXmlTraceListener, Enferno.Public" listenerDataType="Enferno.Public.Logging.Configuration.RollingXmlTraceListenerData, Enferno.Public" fileName="C:\Temp\Logs\SalesTool\Debug.svclog" rollFileExistsBehavior="Increment" rollSizeKB="100000" maxArchivedFiles="4" traceOutputOptions="LogicalOperationStack, DateTime, Timestamp, ProcessId, ThreadId" />
    </listeners>
    <formatters />
    <logFilters>
      <add type="Microsoft.Practices.EnterpriseLibrary.Logging.Filters.LogEnabledFilter, Microsoft.Practices.EnterpriseLibrary.Logging" enabled="true" name="Logging Enabled Filter" />
    </logFilters>
    <categorySources>
      <add switchValue="Error" name="Alert">
        <listeners>
          <add name="AlertListener" />
        </listeners>
      </add>
      <add switchValue="All" name="Debug">
        <listeners>
          <add name="DebugListener" />
        </listeners>
      </add>
    </categorySources>
    <specialSources>
      <allEvents switchValue="Off" name="All Events">
        <listeners>
          <add name="UnprocessedListener" />
        </listeners>
      </allEvents>
      <notProcessed switchValue="All" name="Unprocessed Category">
        <listeners>
          <add name="UnprocessedListener" />
        </listeners>
      </notProcessed>
      <errors switchValue="All" name="Logging Errors &amp; Warnings">
        <listeners>
          <add name="UnprocessedListener" />
        </listeners>
      </errors>
    </specialSources>
  </loggingConfiguration>
  <system.serviceModel>
    <bindings>
      <wsHttpBinding>
        <binding name="SOAP" maxReceivedMessageSize="10000000">
          <security mode="Transport">
            <transport clientCredentialType="Certificate" proxyCredentialType="None" realm="" />
            <message clientCredentialType="Windows" negotiateServiceCredential="true" />
          </security>
        </binding>
      </wsHttpBinding>
    </bindings>
    <client>
      <endpoint name="APPLICATION" address="https://servicesstage.enferno.se/api/1.1/ApplicationService.svc/soap" behaviorConfiguration="CertificateBehavior" binding="wsHttpBinding" bindingConfiguration="SOAP" contract="Enferno.StormApiClient.Applications.ApplicationService" />
      <endpoint name="PRODUCT" address="https://servicesstage.enferno.se/api/1.1/ProductService.svc/soap" behaviorConfiguration="CertificateBehavior" binding="wsHttpBinding" bindingConfiguration="SOAP" contract="Enferno.StormApiClient.Products.ProductService" />
      <endpoint name="CUSTOMER" address="https://servicesstage.enferno.se/api/1.1/CustomerService.svc/soap" behaviorConfiguration="CertificateBehavior" binding="wsHttpBinding" bindingConfiguration="SOAP" contract="Enferno.StormApiClient.Customers.CustomerService" />
      <endpoint name="SHOPPING" address="https://servicesstage.enferno.se/api/1.1/ShoppingService.svc/soap" behaviorConfiguration="CertificateBehavior" binding="wsHttpBinding" bindingConfiguration="SOAP" contract="Enferno.StormApiClient.Shopping.ShoppingService" />
      <endpoint name="ORDER" address="https://servicesstage.enferno.se/api/1.1/OrderService.svc/soap" behaviorConfiguration="CertificateBehavior" binding="wsHttpBinding" bindingConfiguration="SOAP" contract="Enferno.StormApiClient.Orders.OrderService" />
      <endpoint name="EXPOSE" address="https://servicesstage.enferno.se/api/1.1/ExposeService.svc/soap" behaviorConfiguration="CertificateBehavior" binding="wsHttpBinding" bindingConfiguration="SOAP" contract="Enferno.StormApiClient.Expose.ExposeService" />
    </client>
    <behaviors>
      <endpointBehaviors>
        <behavior name="CertificateBehavior">
          <clientCredentials>
            <serviceCertificate>
              <authentication certificateValidationMode="PeerOrChainTrust" revocationMode="Online" />
            </serviceCertificate>
          </clientCredentials>
        </behavior>
      </endpointBehaviors>
    </behaviors>
  </system.serviceModel>
  <system.web>
    <compilation debug="true" targetFramework="4.5" />
    <httpRuntime targetFramework="4.5" />
  </system.web>
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true">
      <add name="StormModule" type="Enferno.Web.StormUtils.StormModule, Enferno.Web.StormUtils" preCondition="" />
    </modules>
    <handlers>
      <remove name="ExtensionlessUrlHandler-Integrated-4.0" />
      <remove name="OPTIONSVerbHandler" />
      <remove name="TRACEVerbHandler" />
      <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="*" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
    </handlers>
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebGrease" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.5.2.14234" newVersion="1.5.2.14234" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <system.codedom>
    <compilers>
      <compiler language="c#;cs;csharp" extension=".cs" type="Microsoft.CSharp.CSharpCodeProvider, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" warningLevel="4" compilerOptions="/langversion:5 /nowarn:1659;1699;1701">
        <providerOption name="CompilerVersion" value="v4.0" />
      </compiler>
      <compiler language="vb;vbs;visualbasic;vbscript" extension=".vb" type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.VBCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" warningLevel="4" compilerOptions="/langversion:14 /nowarn:41008 /define:_MYTYPE=\&quot;Web\&quot; /optionInfer+" />
    </compilers>
  </system.codedom>
</configuration>